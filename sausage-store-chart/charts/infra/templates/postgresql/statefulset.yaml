apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgresql
  labels:
    app: postgresql
spec:
  serviceName: postgresql            
  replicas: {{ .Values.infra.postgresql.replicas }}
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      securityContext:
        runAsUser: 999              
        runAsGroup: 999
        fsGroup: 999                 
      containers:
        - name: postgresql
          image: {{ .Values.infra.postgresql.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.infra.postgresql.containerPort }}
              name: postgres
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.infra.postgresql.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.infra.postgresql.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.infra.postgresql.env.POSTGRES_DB }}"
            - name: PGDATA                     
              value: "/var/lib/postgresql/data/pgdata"
          resources: {{- toYaml .Values.infra.postgresql.resources | nindent 12 }}
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data         
      spec:
        accessModes:
          - {{ .Values.infra.postgresql.storage.accessMode }}
        resources:
          requests:
            storage: {{ .Values.infra.postgresql.storage.size }}
        {{- if .Values.infra.postgresql.storage.storageClassName }}
        storageClassName: {{ .Values.infra.postgresql.storage.storageClassName | quote }}
        {{- end }}
