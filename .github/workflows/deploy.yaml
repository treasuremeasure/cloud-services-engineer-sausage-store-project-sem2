name: Sausage Store Deploy

on:
  push:
    branches:
      - main

env:
  NEXUS_HELM_REPO: ${{ secrets.NEXUS_HELM_REPO }}              # https://nexus.example.com/repository/helm-hosted
  NEXUS_HELM_REPO_USER: ${{ secrets.NEXUS_HELM_REPO_USER }}
  NEXUS_HELM_REPO_PASSWORD: ${{ secrets.NEXUS_HELM_REPO_PASSWORD }}
  SAUSAGE_STORE_NAMESPACE: r-devops-magistracy-project-2sem-920037519
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
  CHART_DIR: .                            # Путь к UMBRELLA-чарту
  RELEASE_NAME: sausage-store

jobs:
  # --- 1) Сборка и пуш образов в Docker Hub ---
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Версию используем только для backend. Возьмём SHA коммита.
      - name: Define version
        id: vars
        run: echo "VERSION=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Build & Push backend (multi-arch, VERSION=1.0.0)
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=1.0.0
          tags: |
            ${{ secrets.DOCKER_USER }}/sausage-backend:latest
            ${{ secrets.DOCKER_USER }}/sausage-backend:1.0.0


      - name: Build & Push Frontend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USER }}/sausage-frontend:latest

      - name: Build & Push Backend-report to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend-report/
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USER }}/sausage-backend-report:latest

  # --- 2) Пакуем UMBRELLA и пушим в Nexus (helm-hosted) ---
  add_helm_chart_to_nexus:
    name: Add Helm Chart To Nexus
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          helm-version: v3.14.4

      - name: Build dependencies (umbrella)
        run: helm dependency build "${{ env.CHART_DIR }}"

      - name: Lint umbrella
        run: helm lint "${{ env.CHART_DIR }}"

      - name: Package umbrella
        run: |
          mkdir -p dist
          helm package "${{ env.CHART_DIR }}" --destination dist

      - name: Get packaged file name
        id: chart
        run: echo "file=$(ls dist/*.tgz)" >> "$GITHUB_OUTPUT"

      - name: Upload chart to Nexus (helm-hosted)
        env:
          NEXUS_HELM_REPO: ${{ env.NEXUS_HELM_REPO }}
          NEXUS_HELM_REPO_USER: ${{ env.NEXUS_HELM_REPO_USER }}
          NEXUS_HELM_REPO_PASSWORD: ${{ env.NEXUS_HELM_REPO_PASSWORD }}
        run: |
          # Загрузка tgz в hosted-репозиторий Nexus. index.yaml обновится сам.
          curl -fSL -u "$NEXUS_HELM_REPO_USER:$NEXUS_HELM_REPO_PASSWORD" \
            --upload-file "${{ steps.chart.outputs.file }}" \
            "$NEXUS_HELM_REPO/"

     